extends layout
block script
	block script_part01
		script(type="text/javascript", src="../javascript/templates.js")
		script(type="text/javascript", src="../javascript/runtime.js")
		script.
			var makeStep = 0;
			function ProfileBS(name, year, branch, attend) {
				var data = {
					name: name,
					year: year,
					branch: branch,
					attend: attend
				}
				var formData = new FormData();
				for (var key in data) {
					var value = data[key];
					formData.append(key, value);
				}
				var xhttp = new XMLHttpRequest();
				xhttp.open("POST", "branch_profile", true);
				xhttp.send(JSON.stringify(data));
				xhttp.onreadystatechange = function() {
					var getTest = document.getElementById('profileData');
					var getValue = xhttp.responseText;
					getTest.innerHTML = "";
					document.getElementById('profileData').innerHTML = xhttp.responseText;
					$('#profileData').show();
				}
				
				//- $.ajax({
				//- 	url: "/branch_profile",
				//- 	type: "post",
				//- 	data: data,
				//- 	dataType: "json",
				//- 	success: function(data) {
				//- 		document.getElementById("profileData").innerHTML = data.message;
				//- 	},
				//- 	error: function(request) {
				//- 		alert("실패");
				//- 	}
				//- });
			}
			function AddBranchButton() {
				$('.ui.edit.modal')
					.modal({
						closable 	: false,
						onDeny 		: function () {
							//- window.alert('Wait not yet!');
							PlusAddMember();
							return false;
						},
						onApprove 	: function () {
							var $getAdd = $('#addMember');
							$('#addMember').ajaxSubmit({
								error: function (xhr) {
									alert('등록 실패했습니다.\n' + xhr.responseText);
								},
								success: function (response) {
									alert('등록 성공했습니다.'+ response.result);
									document.location.reload();
								}
							});
							//- window.alert('Approved!');
						}
					});
				$('.ui.edit.modal')
					.modal('show');
					
				$('.ui.dropdown')
					.dropdown();
			}

			//- window.onload = function () {
			//- 	//- Display();
			//- }
			$(document).ready(function(){
				$('#profileData').hide();
				$('.small.button').popup();
				$('.ui.dropdown').dropdown();
				$('.ui.checkbox').checkbox();
			});
			
			var addMemberNumber = 1;
			function PlusAddMember () {
				var bmNumber = addMemberNumber;
				var innerText = "";
				var lastYear = "";
				var lastBranch = "";
				var lastDesc = "";
				var keys = ['name', 'branch', 'year', 'attendDesc'];
				for (var i = 0; i < bmNumber; i++) {
					var getData = {};
					getData.num = i;
					keys.forEach (function (key, index) {
						var keyValue = "add_" + key + "[" + i + "]";
						getData[key] = document.getElementsByName(keyValue)[0].value;
						var check = document.getElementsByName(keyValue)[0];
					});
					
					if (i == 0)
						innerText += window.addBranch_template(getData);
					else
						innerText += window.addBranch_second(getData);
					
					lastBranch = getData.branch;
					lastYear = getData.year;
				var lastDesc = getData.attendDesc;
				}
				var empty = { num: bmNumber };
				keys.forEach (function (key, index) {
					empty[key] = '';
				})
				empty.year = lastYear;
				empty.branch = lastBranch;
				empty.attendDesc = lastDesc;
				
				document.getElementById("addMember").innerHTML = innerText + window.addBranch_second(empty);
				$('.ui.edit.modal')
					.modal('refresh');
				//- $('.ui.edit.modal')
				//- 	.modal('show');
				$('.ui.dropdown')
					.dropdown();
				
				addMemberNumber++;
				
			}

			function NextButton(value) {
				if (value == 1) {
					makeStep = makeStep+1;
				}
				else {
					makeStep = makeStep-1;
				}
				if (makeStep < 0) makeStep = 0;
				if (makeStep > 2) makeStep = 2;
				

				if (makeStep == 0) {
					$("div.step.first").addClass('active');
					$("div.step.second").removeClass('active');
					$("div.step.third").removeClass('active');
					$("div.ui.blue.before.labeled.icon.button").hide();
					$("div.ui.blue.after.labeled.icon.button").show();
					$("div.ui.positive.right.labeled.icon.button").hide();
					$("div.ui.black.deny.button").show();
					$("div.ui.first.fluid.grid").show();
					$("table.profile.ui.second.very.basic.small.table").hide();
					$("div.ui.third.fluid.grid").hide();
				}
				else if (makeStep == 1) {
					$("div.step.first").removeClass('active');
					$("div.step.second").addClass('active');
					$("div.step.third").removeClass('active');
					$("div.ui.blue.before.labeled.icon.button").show();
					$("div.ui.blue.after.labeled.icon.button").show();
					$("div.ui.positive.right.labeled.icon.button").hide();
					$("div.ui.black.deny.button").hide();
					$("div.ui.first.fluid.grid").hide();
					$("table.profile.ui.second.very.basic.small.table").show();
					$("div.ui.third.fluid.grid").hide();
				} 
				else if (makeStep == 2) {
					$("div.step.first").removeClass('active');
					$("div.step.second").removeClass('active');
					$("div.step.third").addClass('active');
					$("div.ui.blue.before.labeled.icon.button").show();
					$("div.ui.blue.after.labeled.icon.button").hide();
					$("div.ui.positive.right.labeled.icon.button").show();
					$("div.ui.black.deny.button").hide();
					$("div.ui.first.fluid.grid").hide();
					$("table.profile.ui.second.very.basic.small.table").hide();
					$("div.ui.third.fluid.grid").show();
				} 

			}
			
			function MakeBranchButton() {
				$('.ui.make.modal')
					.modal({
						closable 	: false,
						onDeny 		: function () {
							//- window.alert('Wait not yet!');
							PlusMakeBS();
							return false;
						},
						onApprove 	: function () {
							var $getAdd = $('#makeBranch');
							$('#makeBranch').submit();
							//- window.alert('Approved!');
						}
					});
				$('.ui.make.modal')
					.modal('show');
					
			}
			
			var makeBSNumber = 8;
			function PlusMakeBS () {
				var bsNumber = makeBSNumber;
				var innerText = "";
				var keys = ['nameBS'];
				for (var i = 0; i < bsNumber; i++) {
					var getData = {};
					getData.num = i;
					keys.forEach (function (key, index) {
						var keyValue = "make_" + key + "[" + i + "]";
						getData[key] = document.getElementsByName(keyValue)[0].value;
					});
					
					innerText += window.addNameBS_template(getData);
				}
				var empty = { 
					num: bsNumber,
					nameBS: '' 
				};
				
				document.getElementById("makeFields").innerHTML = innerText + window.addNameBS_template(empty);
				//- $('.ui.make.modal')
				//- 	.modal('hide');
				//- $('.ui.make.modal')
				//- 	.modal('show');

				$('.ui.dropdown')
					.dropdown();
				$('.ui.make.modal')
					.modal('refresh');
				
				makeBSNumber++;
				
			}
	block script_part02
		
block header_item03
	a.main.item.active(href="/branch")
		i.child.icon
		|Friends
block content
	//- script(src="/javascript/menu.js")
	//- div.ui.masthead.vertical.tab.segment
	div.ui.secondary.pointing.menu.navbar.grid.computer.only.row
		block sub_item01
			div.ui.dropdown.sub.item 브랜치 모임
				i.dropdown.icon
				div.menu
					a.sub.item(href="branch?year=2017") 2017
					a.sub.item(href="branch?year=2016-2") 2016-2
					a.sub.item(href="branch?year=2016") 2016
					a.sub.item(href="branch?year=2015-2") 2015-2
					a.sub.item(href="branch?year=2015") 2015
		block sub_item01_2
			a.sub.item(href="/friends") 전체 맴버 현황
			a.sub.item(href="/friends/soccer") 축구 맴버
			a.sub.item(href="/friends/tablepingpong") 탁구 맴버
			a.sub.item(href="/friends/years") 또래 모임
		block sub_item02
			//- - bsList.forEach( function(item,index) {
			//- 	a.sub.item(href="/branch_segment/#{item.branch}?year=#{year}&tag=#{branchTag}") #{item.branch}
			//- - });
		if auth=="manager" || auth=="developer" 
			div.ui.right.secondary.menu(style="position:absolute; top:-10px; right:0px")
				div.item
					div.ui.small.buttons
						button.ui.blue.small.button(onclick="AddBranchButton()", data-content="브랜치원의 브랜치 정보를 추가하거나 수정할 수 있다.")
							|Edit B
						div.divier.or
						button.ui.red.small.button(onclick="MakeBranchButton()", data-content="다음에 만들 브랜치를 생성해볼 수 있습니다.")
							|Make B
	div.ui.secondary.pointing.menu.navbar.grid.tablet.only.row
		block sub_item01
			div.ui.dropdown.sub.item 브랜치 모임
				i.dropdown.icon
				div.menu
					a.sub.item(href="branch?year=2017") 2017
					a.sub.item(href="branch?year=2016-2") 2016-2
					a.sub.item(href="branch?year=2016") 2016
					a.sub.item(href="branch?year=2015-2") 2015-2
					a.sub.item(href="branch?year=2015") 2015
		block sub_item01_2
			a.sub.item(href="/friends") 전체 맴버 현황
			a.sub.item(href="/friends/soccer") 축구 맴버
			a.sub.item(href="/friends/tablepingpong") 탁구 맴버
			a.sub.item(href="/friends/years") 또래 모임
		block sub_item02
		//- block sub_item02
		//- 	- bsList.forEach( function(item,index) {
		//- 		a.sub.item(href="/branch_segment/#{item.branch}?year=#{year}&tag=#{branchTag}") #{item.branch}
		//- 	- });
	block sub_content
	block modal_content
		div.ui.edit.modal
			i.close.icon 
			div.header 브랜치에 맴버 추가 혹은 수정 
			div.ui.content
				form#addMember.ui.fluid.form(action="/addBranch" method="post")
					div.four.fields
						div.field
							label 이름
							input(name="add_name[0]", placeholder="이름", type="text")
						div.field
							label 브랜치
							input(name="add_branch[0]", placeholder="브랜치", type="text")
						div.field
							label 비고
							div.center.aligned: div.ui.selection.dropdown
								//- input(name="add_attendDesc[0]", placeholder="비고", type="text")
								input(type="hidden", name="add_attendDesc[0]", value="기본")
								i.dropdown.icon
								div.text 기본
								div.menu
									div.item(data-value="기본", style="min-width:100px; max-height:30px") 기본
									div.item(data-value="청1부", style="min-width:100px; max-height:30px") 청1부
									div.item(data-value="청2부", style="min-width:100px; max-height:30px") 청2부
									div.item(data-value="군대", style="min-width:100px; max-height:30px") 군대
									div.item(data-value="유학", style="min-width:100px; max-height:30px") 유학
									div.item(data-value="bs", style="min-width:100px; max-height:30px") bs
						div.field
							label 년도
							input(name="add_year[0]", placeholder="년도", type="text" value="#{year}")
			div.actions 
				div.ui.black.deny.button
					i.plus.center.icon
					|등록 맴버 추가
				div.ui.positive.right.labeled.icon.button 등록
					i.checkmark.icon
	block make_content
		div.ui.make.modal
			div.ui.three.top.attached.steps
				div.step.first.active
					i.truck.icon
					div.content
						div.title BS 선정
						div.description BS 임원 명단을 결정합니다.
				div.step.second
					i.configure.icon
					div.content
						div.title 브랜치 설정
						div.description 브랜치 편성 설정을 정합니다. 
				div.step.third
					i.remove.icon
					div.content
						div.title 제외 맴버 설정
						div.description 제외 시킬 사람들을 정합니다. 
			div.ui.attached.content
				form#makeBranch.ui.form(action="/makeBranch" method="post")
					div.ui.first.fluid.grid#makeFields(style="display:block")
						if bsList == null
							div.two.wide.column
								label BS
								input(name="make_nameBS[0]", placeholder="이름", type="text")
							div.two.wide.column
								label BS
								input(name="make_nameBS[1]", placeholder="이름", type="text")
							div.two.wide.column
								label BS
								input(name="make_nameBS[2]", placeholder="이름", type="text")
							div.two.wide.column
								label BS
								input(name="make_nameBS[3]", placeholder="이름", type="text")
							div.two.wide.column
								label BS
								input(name="make_nameBS[4]", placeholder="이름", type="text")
							div.two.wide.column
								label BS
								input(name="make_nameBS[5]", placeholder="이름", type="text")
							div.two.wide.column
								label BS
								input(name="make_nameBS[6]", placeholder="이름", type="text")
							div.two.wide.column
								label BS
								input(name="make_nameBS[7]", placeholder="이름", type="text")
						else 
							- bsList.forEach( function(item,index) {
							div.two.wide.column
								label BS
								input(name="make_nameBS[#{index}]", placeholder= "이름", type="text", value="#{item.RowKey}")
							- });
					div.ui.third.fluid.grid(style="display:none")
						div.two.wide.column
							label 이름
							input(name="remove_name[0]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[1]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[2]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[3]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[4]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[5]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[6]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[7]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[8]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[9]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[10]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[11]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[12]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[13]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[14]", placeholder="", type="text")
						div.two.wide.column
							label 이름
							input(name="remove_name[15]", placeholder="", type="text")
					table.profile.ui.second.very.basic.small.table(style="display:none")
						tr
							td 청 1/2 부 분리
							td.center.aligned: div.ui.selection.dropdown
								input(type="hidden", name="seperate", value="0")
								i.dropdown.icon
								div.text
								div.menu
									div.item(data-value="0", style="min-width:100px; max-height:30px") 분리함
									div.item(data-value="1", style="min-width:100px; max-height:30px") 분리하지 않음
						tr
							td 특수 정보 사용
							td.center.aligned: div.ui.selection.dropdown
								input(type="hidden", name="likeData", value="0")
								i.dropdown.icon
								div.text
								div.menu
									div.item(data-value="0", style="min-width:100px; max-height:30px") 사용
									div.item(data-value="1", style="min-width:100px; max-height:30px") 사용하지 않음
						tr
							td 가족 분리
							td.center.aligned: div.ui.selection.dropdown
								input(type="hidden", name="familyData", value="0")
								i.dropdown.icon
								div.text
								div.menu
									div.item(data-value="0", style="min-width:100px; max-height:30px") 분리
									div.item(data-value="1", style="min-width:100px; max-height:30px") 분리하지 않음
						tr
							td 인원들 활성도 비교
							td.center.aligned: div.ui.selection.dropdown
								input(type="hidden", name="powerData", value="0")
								i.dropdown.icon
								div.text
								div.menu
									div.item(data-value="0", style="min-width:100px; max-height:30px") 아주 균등하게
									div.item(data-value="1", style="min-width:100px; max-height:30px") 꽤 균등하게
									div.item(data-value="2", style="min-width:100px; max-height:30px") 조금 균등하게
									div.item(data-value="3", style="min-width:100px; max-height:30px") 사용하지 않음
						tr
							td 임시 저장 이름
							td(style="text-align:center")
								div.ui.input
									input(type="text", name="tempName", value="", placeholder="저장시 사용 이름")

			div.actions 
				div.ui.black.deny.button
					i.plus.center.icon
					|등록 BS 추가
				div.ui.blue.before.labeled.icon.button(onclick="NextButton(0)", style="display:none") 이전
					i.arrow.left.icon
				div.ui.blue.after.labeled.icon.button(onclick="NextButton(1)") 다음
					i.arrow.right.icon
				div.ui.positive.right.labeled.icon.button(style="display:none") 등록
					i.checkmark.icon
			i.close.icon