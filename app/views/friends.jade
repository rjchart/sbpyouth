extends layout
block script
	script(type="text/javascript", src="javascript/ejs_production.js")
	script(type="text/javascript", src="javascript/templates.js")
	script(type="text/javascript", src="javascript/runtime.js")
	script.

		function ProfileBS(year, name, branch, attendString, attend, bYear, bMonth, bDay, gender, phone, attendDesc, tension, tensionString, part, photo) {
			
			//- var div = document.createElement("div");
			//- div.innerHTML = html;
			//- document.body.appendChild(div);
			
			var getData = {};
			getData.birthYear = parseInt(bYear) + 1900;
			getData.birthMonth = bMonth;
			getData.birthDay = bDay;
			getData.branch = branch;
			getData.name = name;
			getData.attendString = attendString;
			getData.attend = attend;
			getData.gender = gender;
			getData.phone = phone;
			getData.attendDesc = attendDesc;
			getData.tension = tension;
			getData.tensionString = tensionString;
			getData.year = year;
			getData.part = part;
			getData.photo = (photo != 0) ? photo : null;
			console.log(getData);
			//- var html = new EJS({url: 'app/views/profile_template.html'}).render(getData);
			var html = window.profile_edit(getData);
			//- console.log(html);
			document.getElementById("profileData").innerHTML = html;
			
			$(".ui.dropdown").dropdown();
		}
		
		function Display () {
			var $htable = $('table.scrolled'), $table = $('table.scroll'), 
			$bodyCells = $table.find('tbody tr:last').children(),
			$headCells = $htable.find('thead tr').children(), colWidth = [], colWidth2, theadCols;
			
			$(window).resize(function() {
				$bodyCells.map(function(i) {
					colWidth[i] = this.clientWidth;
				});
				$htable.find('thead tr').children().each(function(i, v) {
					$(v).width(colWidth[i]);
				});
			}).resize(); // Trigger resize handler
			//- setTimeout(function(){
			//- }, 100);
		}
		
		function addListener(element, eventName, handler) {
			if (element.attachEvent) {
				element.attachEvent('on' + eventName, handler);
			}
			else if (element.addEventListener) {
				element.addEventListener(eventName, handler, false);
			}
			else {
				element['on' + eventName] = handler;
			}
			element['on' + eventName] = handler;
		}

		function removeListener(element, eventName, handler) {
			if (element.detachEvent) {
				element.detachEvent('on' + eventName, handler);
			}
			else if (element.addEventListener) {
				element.removeEventListener(eventName, handler, false);
			}
			else {
				element['on' + eventName] = null;
			}
		}
		
		function UploadSubmit () {
			$('#uploadForm').ajaxSubmit({
				error: function(xhr) {
					alert("데이터 갱신에 실패했습니다.");
				},

				success: function(response) {
					alert("저장되었습니다.");
					if (response.field) {
						var field = response.field;
						var id = field['RowKey']._;
						//- var clickpass = "ProfileBS(" + field['year']._ + ", '"
						//- + field['RowKey']._ + "','" + field['branch']._ + "','" 
						//- + field['attendString']._ + "','" + field['attend']._ + "','" +
						//- + field['birthYear']._ + "','" + field['birthMonth']._ + "','" + field['birthDay']._ + "','" 
						//- + field['gender']._ + "','" + field['phone']._ + "','" + field['attendDesc']._ + "','" 
						//- + field['tension']._ + "','" + field['tensionString']._ + "','" + field['part']._ + "','" 
						//- + field['photo']._ + "')";
						//- var clickpass = ProfileBS(field['year']._, field['RowKey']._, field['branch']._, field['attendString']._, field['attend']._,
						//-  field['birthYear']._, field['birthMonth']._, field['birthDay']._, field['gender']._, field['phone']._, field['attendDesc']._, 
						//-  field['tension']._, field['tensionString']._, field['part']._, field['photo']._ );
						var check = document.getElementById(id);
						var first = check.children[0].children[0];
						var gender = check.children[1];
						var phone = check.children[2];
						var birth = check.children[3];
						var branch = check.children[4];
						var part = check.children[5];
						var attend = check.children[6];
						var desc = check.children[7];
						first.onclick = function () {ProfileBS(field['year']._, field['RowKey']._, field['branch']._, field['attendString']._, field['attend']._,
						 field['birthYear']._, field['birthMonth']._, field['birthDay']._, field['gender']._, field['phone']._, field['attendDesc']._, 
						 field['tension']._, field['tensionString']._, field['part']._, field['photo']._ );
						};
						gender.innerHTML = field['gender']._;
						phone.innerHTML = field['phone']._;
						birth.innerHTML = (field['birthYear']._+1900)+"."+field['birthMonth']._+"."+field['birthDay']._;
						branch.innerHTML = field['branch']._;
						part.innerHTML = field['part']._;
						attend.innerHTML = field['attendString']._;
						desc.innerHTML = field['attendDesc']._;
						//- addListener(document.getElementById('check'), 'click', "ProfileBS()");
					}
				}
			});
		}
		
		function ReadURL(input) {
			var url = input.value;
			var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
			if (input.files && input.files[0] && (ext == "gif" || ext == "png" || ext == "jpeg" || ext == "jpg")) {
				var reader = new FileReader();

				reader.onload = function (e) {
					$('#updateImage').attr('src', e.target.result);
				}
				reader.readAsDataURL(input.files[0]);
			}
			else{
				alert("파일을 올리는데 실패하였습니다.");
			}
		}

		window.onload = function () {
			Display();
		}
	
block header_item03
	a.item.active(href="/friends")
		i.child.icon 
		|Friends
block content
	div.ui.secondary.pointing.menu
		div.ui.container
			a.active.item 전체 맴버 현황
			a.item 부장 집사
			a.item 임원
	div.main.ui.container(onload="Display()")
		div.ui.grid
			div.twelve.wide.streched.column
				div.ui.segment
					h2.ui.header
						|#{year}년도 청년부 맴버 리스트
					div.ui.container
						table.scrolled.ui.line.celled.table(style="width:100%;border-bottom-width: 5px; margin:0")
							thead
								tr
									th 이름
									th 성별
									th 전화번호
									th 생년월일
									th 브랜치
									th 소속
									th 출석
									th 비고
						div.member(style="width:100%; height:340px; overflow:auto; margin:0")
							table.scroll.ui.celled.structured.striped.table
								tbody
									each member, i in memberList
										tr(id="#{member.RowKey._}")
											td.name: label(onclick="ProfileBS(#{year}, '#{member.RowKey._}','#{member.branch._}','#{member.attendString._}','#{member.attend._}','#{member.birthYear._}','#{member.birthMonth._}','#{member.birthDay._}','#{member.gender._}','#{member.phone._}','#{member.attendDesc._}','#{member.tension ? member.tension._ : 0}','#{member.tensionString ? member.tensionString._ : 0}','#{member.part ? member.part._ : 0}', '#{member.photo ? member.photo._ : 0}')") #{member.RowKey._}
											td.gender #{member.gender?member.gender._: '모름'}
											td.phone #{member.phone._}
											td.birth #{parseInt(member.birthYear._) + 1900}.#{member.birthMonth._}.#{member.birthDay._}															
											td.branch #{ member.branch ? member.branch._ : '없음'}
											td.part #{ member.part ? member.part._ : '없음'}
											td.attend(style="min-width:40px") #{ member.attendString ? member.attendString._  : '없음'}
											td.desc #{ member.attendDesc ? member.attendDesc._ : '없음'}
						table.ui.celled.structured.striped.table(style="margin:0;border-up-width: 5px;")
							tfoot
								tr
									th(colspan="9") 
										div.ui.borderless.small.left.floated.pagination.menu
											a.item(href="/members?") <i class="child icon"></i> all
											a.item(href="/members?attendValue=1") <i class="frown icon"></i> bad
											a.item(href="/members?attendValue=2") <i class="meh icon"></i> well
											a.item(href="/members?attendValue=3") <i class="smile icon"></i> good
											a.item(href="/members?attendValue=4") <i class="thumbs outline up icon"></i> perfect
										
										div.ui.right.floated.small.primary.labeled.icon.button
											i.user.icon 
											|Add User											
			div#profileData.four.wide.column
				include profile
							