extends layout
block script
	script(type="text/javascript", src="javascript/ejs_production.js")
	script(type="text/javascript", src="javascript/templates.js")
	script(type="text/javascript", src="javascript/runtime.js")
	script.
		var isEditable = false;
		var isPowerEditable = false;
		var ttoleValue = 1985;
		var savedData = null;
		function ProfileBS(name, year, branch, attend, charge) {
			var data = {
				name: name,
				year: year,
				branch: branch,
				attend: attend,
				charge: charge
			}
			
			$.ajax({
				url: "/friend_profile",
				type: "post",
				data: data,
				dataType: "json",
				success: function(data) {
					var html;

					var html2 = window.modalMemberProfile(
						{
							data:data
						});
					document.getElementById("profileModal").innerHTML = html2;

					if (!isEditable)
						html = window.profile_template(data);
					else {
						html = window.profile_edit(data);
					}
					document.getElementById("profileData").innerHTML = html;
					$('#profileData').show();

					if (isPowerEditable) {
						var detail = window.detailProfile_template(data);
						document.getElementById("DetailProfile").innerHTML = detail;
						$('#DetailProfile').show();
					}
					else {
						$('#DetailProfile').hide();
					}
					
					$(".ui.dropdown").dropdown();

				},
				error: function(request) {
					alert("데이터를 불러오기 실패하였습니다.");
				}
			});
			
		}
		function ModalProfile() {
			$('.ui.profile.modal')
				.modal('show');
		}
		function EditSubmit() {
			$('#editMember').ajaxSubmit({
				error: function(xhr) {
					alert("데이터 갱신에 실패했습니다.");
				},
				success: function(response) {
					alert("저장되었습니다.");
					if (response.field) {
						;
					}
				}
			});
		}

		//- function ProfileBS(year, name, partition, branch, attendString, attend, bYear, bMonth, bDay, gender, phone, attendDesc, tension, tensionString, part, photo, charge, mail, locate, service) {
			
		//- 	//- var div = document.createElement("div");
		//- 	//- div.innerHTML = html;
		//- 	//- document.body.appendChild(div);
			
		//- 	var getData = {};
		//- 	getData.PartitionKey = partition;
		//- 	getData.birthYear = bYear;
		//- 	getData.birthMonth = bMonth;
		//- 	getData.birthDay = bDay;
		//- 	getData.branch = branch;
		//- 	getData.name = name;
		//- 	getData.attendString = attendString;
		//- 	getData.attend = attend;
		//- 	getData.gender = gender;
		//- 	getData.phone = phone;
		//- 	getData.attendDesc = attendDesc;
		//- 	getData.tension = tension;
		//- 	getData.tensionString = tensionString;
		//- 	getData.year = year;
		//- 	getData.part = part;
		//- 	getData.photo = (photo != 0) ? photo : null;
		//- 	getData.charge = charge || 'bm';
		//- 	getData.mail = mail || '';
		//- 	getData.locate = locate || '';
		//- 	getData.service = service || '';
			
		//- 	var html;
		//- 	if (!isEditable)
		//- 		html = window.profile_template(getData);
		//- 	else
		//- 		html = window.profile_edit(getData);
		//- 	//- console.log(html);
		//- 	document.getElementById("profileData").innerHTML = html;
			
		//- 	$(".ui.dropdown").dropdown();
		//- }
		
		function Display () {
			var $htable = $('table.scrolled'), $table = $('table.scroll'), 
			$bodyCells = $table.find('tbody tr.bMember:last').children(),
			$headCells = $htable.find('thead tr').children(), colWidth = [];
			
			$(window).resize(function() {
				$bodyCells.map(function(i) {
					colWidth[i] = this.clientWidth;
				});
				$headCells.each(function(i, v) {
					$(v).width(colWidth[i]);
				});
			}).resize(); // Trigger resize handler
		}
		
		function addListener(element, eventName, handler) {
			if (element.attachEvent) {
				element.attachEvent('on' + eventName, handler);
			}
			else if (element.addEventListener) {
				element.addEventListener(eventName, handler, false);
			}
			else {
				element['on' + eventName] = handler;
			}
			element['on' + eventName] = handler;
		}

		function removeListener(element, eventName, handler) {
			if (element.detachEvent) {
				element.detachEvent('on' + eventName, handler);
			}
			else if (element.addEventListener) {
				element.removeEventListener(eventName, handler, false);
			}
			else {
				element['on' + eventName] = null;
			}
		}
		
		function UploadSubmit () {
			$('#uploadForm').ajaxSubmit({
				error: function(xhr) {
					alert("데이터 갱신에 실패했습니다.");
				},

				success: function(response) {
					alert("저장되었습니다.");
					if (response.field) {
						var field = response.field;
						var id = field['RowKey'];
						var check = document.getElementById(id);
						var first = check.children[0].children[0];
						var gender = check.children[1];
						var phone = check.children[2];
						var birth = check.children[3];
						var branch = check.children[4];
						var part = check.children[5];
						var attend = check.children[6];
						var desc = check.children[7];
						//- first.onclick = function () {ProfileBS(field['year'], field['RowKey'], field['PartitionKey'], field['branch'], field['attendString'], field['attend'],
						//-  field['birthYear'], field['birthMonth'], field['birthDay'], field['gender'], field['phone'], field['attendDesc'], 
						//-  field['tension'], field['tensionString'], field['part'], field['photo'] ,field['charge'] ,field['mail'] ,field['locate'] ,field['service'] );
						//- };

						first.onclick = function () {
							ProfileBS(field['RowKey'], field['year'], field['branch'], field['attend'], field['charge']);
						};
						//- gender.innerHTML = field['gender'];
						//- phone.innerHTML = field['phone'];
						//- birth.innerHTML = (field['birthYear']+1900)+"."+field['birthMonth']+"."+field['birthDay'];
						//- branch.innerHTML = field['branch'];
						//- part.innerHTML = field['part'];
						//- attend.innerHTML = field['attendString'];
						//- desc.innerHTML = field['attendDesc'];


						//- addListener(document.getElementById('check'), 'click', "ProfileBS()");
					}
				}
			});
		}
		
		function ReadURL(input) {
			var url = input.value;
			var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
			if (input.files && input.files[0] && (ext == "gif" || ext == "png" || ext == "jpeg" || ext == "jpg")) {
				var reader = new FileReader();

				reader.onload = function (e) {
					$('#updateImage').attr('src', e.target.result);
				}
				reader.readAsDataURL(input.files[0]);
			}
			else{
				alert("파일을 올리는데 실패하였습니다.");
			}
		}

		window.onload = function () {
			//- Display();
		}
		
		function SubMenuFriendClicked (index) {
			var date = new Date();
			var year = date.getFullYear();
			console.log("sub");
			var $table = $('table.scroll tbody tr');
			if (index == 0) {
				$table.show();
				$table.addClass('bMember');
			}
			if (index == 1) {
				$table.hide();
				$table.removeClass('bMember');
				for (i = 26; i < 40; i++) {
					var getTtole = year - i;
					var setValue = '.' + getTtole;
					$(setValue).show();
					$(setValue).addClass('bMember');
				}
			}
			if (index == 2) {
				$table.hide();
				$table.removeClass('bMember');
				for (i = 19; i < 26; i++) {
					var getTtole = year - i;
					var setValue = '.' + getTtole;
					$(setValue).show();
					$(setValue).addClass('bMember');
				}
			}
			if (index == 3) {
				$table.hide();
				$table.removeClass('bMember');
				[-1,0,1].forEach (function (item) {
					var getTtole = parseInt(ttoleValue) + item;
					var setValue = '.' + getTtole;
					$(setValue).show();
					$(setValue).addClass('bMember');
					
				})
			}
			
			setTimeout(function(){
				Display();
			}, 100);
		}
		
		function SubMenuEditClicked (isEdit, isPower) {
			console.log("sub");
			if (!isEdit) {
				isEditable = false;
			}
			if (isEdit) {
				isEditable = true;
			}
			isPowerEditable = isPower;
		}
	
		function AddMemberButton() {
			$('.ui.one.modal')
				.modal({
					closable 	: false,
					onDeny 		: function () {
						//- window.alert('Wait not yet!');
						PlusAddMember();
						return false;
					},
					onApprove 	: function () {
						var $getAdd = $('#addMember');
						$('#addMember').ajaxSubmit({
							error: function (xhr) {
								alert('등록 실패했습니다.');
							},
							success: function (response) {
								alert('등록 성공했습니다.');
							}
						});
						//- window.alert('Approved!');
					}
				});
			$('.ui.one.modal')
				.modal('show');
				
		}
		
		var addMemberNumber = 1;
		function PlusAddMember () {
			var bmNumber = addMemberNumber;
			var innerText = "";
			var keys = ['name', 'gender', 'phone', 'birthYear', 'birthMonth', 'birthDay', 'tension', 'attend'];
			for (var i = 0; i < bmNumber; i++) {
				var getData = {};
				getData.num = i;
				keys.forEach (function (key, index) {
					var keyValue = "add_" + key + "[" + i + "]";
					getData[key] = document.getElementsByName(keyValue)[0].value;
				});
				
				if (i == 0)
					innerText += window.addPerson_template(getData);
				else
					innerText += window.addPerson_second(getData);
			}
			var empty = { num: bmNumber };
			keys.forEach (function (key, index) {
				empty[key] = '';
			})
			document.getElementById("addMember").innerHTML = innerText + window.addPerson_second(empty);
			$('.ui.one.modal')
				.modal('refresh');
			//- $('.ui.modal')
			//- 	.modal('show');
			
			addMemberNumber++;
			
		}

		var getSearch;
		function TypeSearch () {
			var device = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()));
			//- var getSearch = document.getElementById('typeSearch').value;
			//- if (device) {
				//- getSearch = document.getElementById('typeSearchMobile').value;

					//- if (getSearch != '')
					//- 	location.href="/friends?query=" + getSearch;
					//- else 
					//- 	location.href="/friends";
					//- return;
			//- }
			getSearch = getSearch.replace(' ', '.');
			console.log('search:' + getSearch);
			
			var date = new Date();
			var year = date.getFullYear();
			console.log("sub");
			var $table = $('table.scroll tbody tr');
			if (getSearch != '') {
				$table.hide();
				$table.removeClass('bMember');
				var setValue = '#' + getSearch;
				$(setValue).show();
				$(setValue).addClass('bMember');
				
				var setValue = '.' + getSearch;
				$(setValue).show();
				$(setValue).addClass('bMember');
					
				setTimeout(function(){
					Display();
				}, 300);
			}
			else {
				$table.show();
				$table.addClass('bMember');
			}
			
			//- if (index == 0) {
			//- 	$table.show();
			//- 	$table.addClass('bMember');
			//- }
			//- if (index == 1) {
			//- 	$table.hide();
			//- 	$table.removeClass('bMember');
			//- 	for (i = 26; i < 40; i++) {
			//- 		var getTtole = year - i;
			//- 		var setValue = '.' + getTtole;
			//- 		$(setValue).show();
			//- 		$(setValue).addClass('bMember');
			//- 	}
			//- }
			//- if (index == 2) {
			//- 	$table.hide();
			//- 	$table.removeClass('bMember');
			//- 	for (i = 19; i < 26; i++) {
			//- 		var getTtole = year - i;
			//- 		var setValue = '.' + getTtole;
			//- 		$(setValue).show();
			//- 		$(setValue).addClass('bMember');
			//- 	}
			//- }
			//- if (index == 3) {
			//- 	$table.hide();
			//- 	$table.removeClass('bMember');
			//- 	[-1,0,1].forEach (function (item) {
			//- 		var getTtole = parseInt(ttoleValue) + item;
			//- 		var setValue = '.' + getTtole;
			//- 		$(setValue).show();
			//- 		$(setValue).addClass('bMember');
					
			//- 	})
			//- }
			
		}
		$(document).ready(function(){
			$('input.search').keypress(function(e){
				getSearch = e.currentTarget.value;
				if(e.keyCode==13)
					TypeSearch();
			});

			$('input.search').focusout(function(e){
				getSearch = e.currentTarget.val();
				TypeSearch();
			});
			$('#DetailProfile').hide();
			$('#profileData').hide();

			//- $('input#typeSearch').focus
		});
		
		function DeleteMember(year, name) {
			var data = {
				PartitionKey: 'Member',
				RowKey: name
			}
			$.ajax({
				url: "/removeMember",
				type: "post",
				data: data,
				dataType: "json",
				success: function(data) {
					alert('삭제 성공했습니다.');
				},
				error: function(xhr) {
					alert('삭제 실패했습니다.');
				}
			});
		}

		function Delete(key, member, target, relation) {
			var data = {
				key: key,
				member: member,
				target: target,
				relation: relation
			}

			$.ajax({
				url: "/delete/" + relation,
				type: "post",
				data: data,
				dataType: "json",
				success: function(data) {
					console.log("success");
					var alertString = data.target + "님이 목록에서 제거되었습니다."
					alert(alertString);
				},
				error: function(request) {
					alert("실패");
				}
			});
		}

		function Insert(relation) {
			var getID = "#insert_" + relation;
			$(getID).ajaxSubmit({
				success: function(data) {
					console.log("success");
					var alertString = data.target + "님이 목록에 추가되었습니다."
					alert(alertString);
				},
				error: function(request) {
					alert("실패");
				}
			});
		}
			
block header_item03
	div.main.item.active(href="/friends")
		i.child.icon 
		|Friends
block content
	div.ui.secondary.pointing.menu.navbar.grid.computer.tablet.only.row
		if (sub == 'total')
			a.active.sub.item(href="/friends") 전체 맴버 현황
		else
			a.sub.item(href="/friends") 전체 맴버 현황
		if (sub == 'soccer')
			a.active.sub.item(href="/friends/soccer") 축구 맴버
		else 
			a.sub.item(href="/friends/soccer") 축구 맴버
		if (sub == 'tablepingpong')
			a.active.sub.item(href="/friends/tablepingpong") 탁구 맴버
		else
			a.sub.item(href="/friends/tablepingpong") 탁구 맴버
		if (sub == 'yearFriends')
			a.active.sub.item(href="/friends/years") 또래 모임
		else
			a.sub.item(href="/friends/years") 또래 모임
		//- a.sub.item(onclick="SubMenuFriendClicked(3)") 또래 친구들
		//- if auth=="manager" || auth=="developer" || auth=="executive" 
		div.ui.right.secondary.menu
			if auth=="manager" || auth=="developer"
				button.ui.blue.item.active(onclick="SubMenuEditClicked(false, false)") show
				button.ui.blue.item(onclick="SubMenuEditClicked(true, false)") edit
				if auth=="developer"
					button.ui.blue.item(onclick="SubMenuEditClicked(true, true)") p_edit
				div.item
					div.ui.right.floated.small.primary.labeled.icon.button(onclick="AddMemberButton()")
						i.user.icon 
						|Add Friend	
	block sub_content
	block modal_content
		div.ui.fullscreen.one.modal
			i.close.icon 
			div.header Add Friend 
			div.ui.content
				form#addMember.ui.fluid.form(action="/addMember" method="post")
					div.eight.fields
						div.field
							label 이름
							input(name="add_name[0]", placeholder="이름", type="text")
						div.field
							label 성별
							input(name="add_gender[0]", placeholder="성별", type="text")
						div.field
							label 전화번호
							input(name="add_phone[0]", placeholder="소속", type="text")
						div.field
							label 출생년도
							input(name="add_birthYear[0]", placeholder="년도 (2자리)", type="text")
						div.field
							label 출생 월
							input(name="add_birthMonth[0]", placeholder="월", type="text")
						div.field
							label 출생 날짜
							input(name="add_birthDay[0]", placeholder="일", type="text")
						div.field
							label 성격
							input(name="add_tension[0]", placeholder="성격", type="text")
						div.field
							label 출석빈도
							input(name="add_attend[0]", placeholder="출석빈도", type="text")
			div.actions 
				div.ui.black.deny.button
					i.plus.center.icon
					|등록 맴버 추가
				div.ui.positive.right.labeled.icon.button 등록
					i.checkmark.icon
		div#profileModal.ui.profile.modal
			